x22 = 0
y23 = 0
x20=maxpool_dim25*x22
y19=y23*maxpool_dim25
x_tile17=maxpool_dim25*x_tile21
y_tile18=y_tile24*maxpool_dim25
x12=x20
y13=y19
x_tile14=x_tile17
y_tile15=y_tile18
	output_conv_q = allocate(x12 , y13 , x_tile14 , y_tile15 , )
	output_relu_q = allocate(x20 , y19 , x_tile17 , y_tile18 , )
	{
x22 in (output.W_start, output.W_start + output.LW, x_tile21)
y23 in (output.H_start, output.H_start + output.LH, y_tile24)
x20=maxpool_dim25*x22
y19=y23*maxpool_dim25
x_tile17=maxpool_dim25*x_tile21
y_tile18=y_tile24*maxpool_dim25
x12=x20
y13=y19
x_tile14=x_tile17
y_tile15=y_tile18
	 BLANK 
	input_q5 = input.query(x12 * stride_arg16 (Argument)  , y13 * stride_arg16 (Argument)  , x_tile14 + filter.H - 1 , y_tile15 + filter.W - 1 , )
	 BLANK 
	output_q = output.query(x22 , y23 , x_tile21 , y_tile24 , )
	conv_no_fern_mkl(output_conv : output_conv_q, filter : filter, input : input_q5, )
	relu_material(output_relu : output_relu_q, output_conv : output_conv_q, )
	maxpool(output : output_q, output_relu : output_relu_q, )
	output.insert(x22 , y23 , x_tile21 , y_tile24 , output_q)
	 BLANK 
	input_q5.free()
	 BLANK 

}

	output_conv_q.free()
	output_relu_q.free()
