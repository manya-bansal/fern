x158 = 0
y156 = 0
x153=x158
y154=y156
x_tile152=x_tile157
y_tile155=y_tile159
x150=x153*maxpool_dim151
y149=maxpool_dim151*y154
x_tile147=maxpool_dim151*x_tile152
y_tile148=maxpool_dim151*y_tile155
x143=x150
y144=y149
x_tile145=x_tile147
y_tile146=y_tile148
	output_conv_q = allocate(x143 , y144 , x_tile145 , y_tile146 , )
	output_relu_q = allocate(x150 , y149 , x_tile147 , y_tile148 , )
	output_q = allocate(x153 , y154 , x_tile152 , y_tile155 , )
	{
x158 in (output_tan.W_start, output_tan.W_start + output_tan.LW, x_tile157)
y156 in (output_tan.H_start, output_tan.H_start + output_tan.LH, y_tile159)
x153=x158
y154=y156
x_tile152=x_tile157
y_tile155=y_tile159
x150=x153*maxpool_dim151
y149=maxpool_dim151*y154
x_tile147=maxpool_dim151*x_tile152
y_tile148=maxpool_dim151*y_tile155
x143=x150
y144=y149
x_tile145=x_tile147
y_tile146=y_tile148
	 BLANK 
	input_q34 = input.query(x143 * stride_arg142 (Argument)  , y144 * stride_arg142 (Argument)  , x_tile145 + filter.H - 1 , y_tile146 + filter.W - 1 , )
	 BLANK 
	 BLANK 
	output_tan_q = output_tan.query(x158 , y156 , x_tile157 , y_tile159 , )
	conv_no_fern_mkl(output_conv : output_conv_q, filter : filter, input : input_q34, )
	relu_material(output_relu : output_relu_q, output_conv : output_conv_q, )
	maxpool(output : output_q, output_relu : output_relu_q, )
	tanh(output_tan : output_tan_q, output : output_q, )
	output_tan.insert(x158 , y156 , x_tile157 , y_tile159 , output_tan_q)
	 BLANK 
	input_q34.free()
	 BLANK 
	 BLANK 

}

	output_conv_q.free()
	output_relu_q.free()
	output_q.free()
