y6 in (0, out2.logical_cols, y_tile5)
o in (0, out2.logical_rows, o_s)
i = 0
i_s = 1
x_tile4 = i_s
x7 = o + i
y_tile3=y_tile5
x_tile2=2+x_tile4
y1=y6
x0=x7
	out1_q = allocate(x0 , y1 , x_tile2 , y_tile3 , )
	{
x8 in (0, out1_q.logical_rows, x_tile10)
y9 in (0, out1_q.logical_cols, y_tile11)
	out1_q_q = out1_q.query(x8 , y9 , x_tile10 , y_tile11 , )
	input_q_3 = input.query(x8 , y9 , x_tile10 , y_tile11 + 2 , )
	naive_blur_x_take_2_vec(out1_q : out1_q_q, input : input_q_3, )

}

	{
i in (o, o_s, i_s)
x_tile4 = i_s
x7 = o + i
y_tile3=y_tile5
x_tile2=2+x_tile4
y1=y6
x0=x7
	 BLANK 
	 BLANK 
	out2_q = out2.query(x7 , y6 , x_tile4 , y_tile5 , )
	out1_q_q = out1_q.query(x_tile2 - 1 , y1 , 1 , y_tile3 , )
	input_q_0 = input.query(x0 + x_tile2 - 1 , y1 , 1 , y_tile3 + 2 , )
	naive_blur_x_take_2_vec(out1 : out1_q_q, input : input_q_0, )
	 BLANK 
	naive_blur_y_take_2_vec(out2 : out2_q, )
	 BLANK 
	out1_q_move_src = out1_q.query(1 , y1 , x_tile2 - 1 , y_tile3 , )
	out1_q.insert(0 , y1 , x_tile2 - 1 , y_tile3 , out1_q_move_src)

}

	out1_q.free()
