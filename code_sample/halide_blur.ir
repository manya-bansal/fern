y5 in (0, out2.logical_cols, y_tile7)
o in (0, out2.logical_rows, o_s)
i = 0
x4 = o + i
x_tile6 = i_s
x2=x4
y3=y5
x_tile0=2+x_tile6
y_tile1=y_tile7
	out1_q = allocate(x2 , y3 , x_tile0 , y_tile1 , )
	{
x10 in (0, out1_q.logical_rows, x_tile8)
y11 in (0, out1_q.logical_cols, y_tile9)
	out1_q_q = out1_q.query(x10 , y11 , x_tile8 , y_tile9 , )
	input_q3 = input.query(x10 , y11 , x_tile8 , y_tile9 + 2 , )
	naive_blur_x_take_2_vec(out1_q : out1_q_q, input : input_q3, )

}

	{
i in (o, o_s, i_s)
x4 = o + i
x_tile6 = i_s
x2=x4
y3=y5
x_tile0=2+x_tile6
y_tile1=y_tile7
	 BLANK 
	 BLANK 
	out2_q = out2.query(x4 , y5 , x_tile6 , y_tile7 , )
	out1_q_q = out1_q.query(x_tile0 - 1 , y3 , 1 , y_tile1 , )
	input_q0 = input.query(x2 + x_tile0 - 1 , y3 , 1 , y_tile1 + 2 , )
	naive_blur_x_take_2_vec(out1 : out1_q_q, input : input_q0, )
	 BLANK 
	naive_blur_y_take_2_vec(out2 : out2_q, out1 : out1_q, )
	 BLANK 
	out1_q_move_src = out1_q.query(1 , y3 , x_tile0 - 1 , y_tile1 , )
	out1_q.insert(0 , y3 , x_tile0 - 1 , y_tile1 , out1_q_move_src)

}

	out1_q.free()
